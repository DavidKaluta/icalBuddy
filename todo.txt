
TODO:

- document the -ps argument
- add an argument for replacing newlines within notes values with a custom separator
	- purpose: if property separator strings won't have newlines in them, notes values
	  shouldn't either. difficult to make this automatic since the property output
	  strings -returning functions don't know what the current line's prefixStr looks
	  like and they add indentation to the newlines.


user requests:
-------------------------

- Output in CSV format (i.e. support for more than one (or even arbitrary) output format(s))
	- these two features above here will need similar architectural changes, i.e.
	  abstracting the methods for determining the output presentation and writing
	  multiple implementations
- Display also attachments
- Display also attendees


other (my own ideas):
-------------------------

- Write better examples to the web page in order to better illustrate the customizability
  of output formatting
- Make getEventPropStr() and getTaskPropStr() use NSMutableAttributedStrings from the beginning
  so that formatting could occur even within property names and values
	- I want to be able to format the calendar name in the title property values
	- Would this make the necessary string concatenation code too ugly? If so, how to deal with
	  that? attrStrConcat() ?
- Rewrite man page using the POD syntax (I hate the raw man page syntax so much)
- Implement wrapping to a specified number of maximum characters on each line (problem: will
  look off with non-fixed-width fonts if we try to match indenting levels and fixing those
  problems with arguments might become really complex (i.e. you would need too many different
  kinds of arguments for all the different cases))

- Add timezone support (how to handle these?)


Replace versionNumberCompare() with this: (is this adequate? must test. might break with more
than single-digit numbers.)

	NSNumberFormatter *conv = [[[NSNumberFormatter alloc] init] autorelease];
	NSNumber *curVersNum = [conv numberFromString:[versDict objectForKey:(id)@"Version"]];
	NSNumber *curVersBundleNum = [conv numberFromString:sb_bundleVers];
	
	if ([curVersBundleNum compare:curVersNum]==NSOrderedAscending)
		(-> update available)


